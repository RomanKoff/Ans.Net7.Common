<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MaxLength_TML" xml:space="preserve">
    <value>Не должно содержать больше {1} символов</value>
    <comment>Must not contain more than {1} characters</comment>
  </data>
  <data name="MinLength_TML" xml:space="preserve">
    <value>Не должно содержать меньше {1} символов</value>
    <comment>Must not contain less than {1} characters</comment>
  </data>
  <data name="RegularExpression" xml:space="preserve">
    <value>Значение не соответствует формату</value>
    <comment>The value does not match the format</comment>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Требуется значение</value>
    <comment>A value is required</comment>
  </data>
  <data name="_CaptchaFail" xml:space="preserve">
    <value>Значение не соответствует</value>
  </data>
  <data name="_ExceededParameters" xml:space="preserve">
    <value>Превышено количество параметров</value>
    <comment>You have exceeded the number of parameters!</comment>
  </data>
  <data name="_FileSizeShouldNotExceed_TML" xml:space="preserve">
    <value>Размер файла не должен превышать {0} байт</value>
    <comment>The file size should not exceed {0} bytes</comment>
  </data>
  <data name="_InvalidFileType" xml:space="preserve">
    <value>Неподдерживаемый тип файла</value>
    <comment>Invalid file type</comment>
  </data>
  <data name="_ObjectContainsData" xml:space="preserve">
    <value>Объект содержить данные</value>
  </data>
  <data name="_RangeDate_Max_TML" xml:space="preserve">
    <value>Не должно быть позже {0}</value>
    <comment>Should be no later than {0}</comment>
  </data>
  <data name="_RangeDate_Min_TML" xml:space="preserve">
    <value>Не должно быть раньше {0}</value>
    <comment>Should be not earlier than {0}</comment>
  </data>
  <data name="_RangeNumber_Max_TML" xml:space="preserve">
    <value>Не должно быть больше {0}</value>
    <comment>Should be no more than {0}</comment>
  </data>
  <data name="_RangeNumber_Min_TML" xml:space="preserve">
    <value>Не должно быть меньше {0}</value>
    <comment>Should be not less than {0}</comment>
  </data>
  <data name="_RequiresAUniqueValue" xml:space="preserve">
    <value>Требуется уникальное значение</value>
  </data>
  <data name="_SuchAnObjectExists" xml:space="preserve">
    <value>Такой объект уже существует</value>
  </data>
  <data name="_UploadLocalPathError" xml:space="preserve">
    <value>Ошибка локального пути загрузки</value>
    <comment>Local path error</comment>
  </data>
  <data name="_UploadMoreFragments" xml:space="preserve">
    <value>Попытка загрузить за один запрос несколько фрагментов одного файла</value>
    <comment>Attempt to upload chunked file containing more than one fragment per request</comment>
  </data>
  <data name="_ValueAndConfirmDoNotMatch" xml:space="preserve">
    <value>Подтверждение не совпадает с исходным значением</value>
  </data>
  <data name="__Unknow" xml:space="preserve">
    <value>Неизвестная ошибка</value>
  </data>
</root>