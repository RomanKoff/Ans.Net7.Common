

	codegen.xml

		catalog
		---------
			
			entity
			---------
				
				property
				---------
									
				


	System

		[Key]
		int Id

		[FieldPtrInt(IsRequired = true)]
		public int RefMasterPtr { get; set; }

		[FieldPtrInt()]
		public int? RefParentPtr { get; set; } // ^Entity

		[FieldInt()]
		public int Order { get; set; }

		[FieldPtrInt()]
		public int? Ref{Prefix}{Entity1}Ptr { get; set; } // ^Entity1

		[FieldPtrInt()]
		public int? Ref{Prefix}{Entity2}Ptr { get; set; } // ^Entity2

		[FieldDateTime(IsRequired = true)]
		public DateTime DateCreate { get; set; }

		[FieldDateTime()]
		public DateTime? DateUpdate { get; set; }




	Schema
		Text50			string50
		Text100			string100
		Text250			string250
		Text400			string400
		TextBox400		string400
		Memo			string*
		Doc				string*
		Name			string50	^([a-z_][0-9a-z_-]+)$
		Varname			string50	^([a-zA-Z_][0-9a-zA-Z_]+)$
		Email			string50	^email$
		Int				int
		Long			long
		Float			float
		Double			double
		Decimal			decimal
		Datetime		DateTime?
		Date			DateTime?
		Time			DateTime?
		Bool			bool
		Enum			int
		Set				string400
		Reference		int?
		PtrInt			int?
		

	C#
		string
		int
		int?
		long
		double
		float
		decimal
		DateTime?
		bool


	Validations

	    StringValidationAttribute
            IsRequired
            MinLength
            MaxLength
            RegexPattern
            CompareProperty

		IntValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		LongValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		FloatValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		DoubleValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		DecimalValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		DateTimeValidationAttribute
			IsRequired
			NullValue
			Min
			Max

		RegistryValidationAttribute
			IsRequired
			NullValue


	Fields

		FieldMemoAttribute
		FieldTextBox400Attribute	MaxLength = 400;
		FieldText50Attribute		MaxLength = 50;
		FieldText100Attribute		MaxLength = 100;
		FieldText250Attribute		MaxLength = 250;
		FieldText400Attribute		MaxLength = 400;
		FieldDocAttribute
		FieldVarnameAttribute		MaxLength = 50; RegexPattern = _Consts.REGEX_VARNAME;
		FieldEmailAttribute			MaxLength = 50; RegexPattern = _Consts.REGEX_EMAIL;
		FieldBoolAttribute
		FieldIntAttribute
		FieldLongAttribute
		FieldFloatAttribute
		FieldDoubleAttribute
		FieldDecimalAttribute
		FieldDateTimeAttribute
		FieldDateAttribute
		FieldTimeAttribute
		FieldRegistryAttribute
		FieldEnumAttribute
		FieldSetAttribute			MaxLength = 400;
		FieldReferenceAttribute
		FieldPtrIntAttribute
		FieldHtmlAttribute
		FieldPasswordAttribute		MaxLength = 50; RegexPattern = _Consts.REGEX_PASSWORD;




RESX:

<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype"><value>text/microsoft-resx</value></resheader>
  <resheader name="version"><value>2.0</value></resheader>
  <resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader>
  <resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader>
  <data name="Key1" xml:space="preserve">
    <value>Value 1</value>
	<comment>Comment 1</comment>
  </data>
</root>



<?xml version="1.0" encoding="utf-8"?>
<root>
	
	<!-- Generated: <#=System.DateTime.Now#> -->

	<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader>
	<resheader name="version"><value>2.0</value></resheader>
	<resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader>
	<resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader>
	<data name="_List" xml:space="preserve">
		<value><#=entity.TitleList#></value>
		<comment>Title list mode text</comment>
	</data>
	<data name="_Create" xml:space="preserve">
		<value><#=entity.TitleCreate#></value>
		<comment>Title create mode text</comment>
	</data>
	<data name="_Edit" xml:space="preserve">
		<value><#=entity.TitleEdit#></value>
		<comment>Title edit mode text</comment>
	</data>
	<data name="_Delete" xml:space="preserve">
		<value><#=entity.TitleDelete#></value>
		<comment>Title delete mode text</comment>
	</data>
<#+		foreach (var i in entity.PropertyItemsCollection) {
			if (!string.IsNullOrEmpty(i.Face)) { #>
	<data name="<#=i.Name#>" xml:space="preserve">
		<value><#=i.Face#></value>
		<comment><#=i.Name#> field face</comment>
	</data>
<#+			}
		} #>
</root>

